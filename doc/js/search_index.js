var search_data = {"index":{"searchIndex":["spiralmatrix","each()","even()","new()","random_matrix()","reverse_even()"],"longSearchIndex":["spiralmatrix","spiralmatrix#each()","spiralmatrix#even()","spiralmatrix::new()","spiralmatrix::random_matrix()","spiralmatrix#reverse_even()"],"info":[["SpiralMatrix","","SpiralMatrix.html","","<p>This class allows to work with matrix spiral output as an enumerable.\n"],["each","SpiralMatrix","SpiralMatrix.html#method-i-each","(elements=nil, &block)","<p>Enumerating from the outer side of the matrix to the center There is\n#reverse_each method that returns …\n"],["even","SpiralMatrix","SpiralMatrix.html#method-i-even","()","<p>Shows even elements of the matrix from the outer side of the matrix to the\ncenter\n"],["new","SpiralMatrix","SpiralMatrix.html#method-c-new","(arg=nil)","<p>Can receive integer(size) to generate matrix with random values. Can\nreceive array(matrix). Can receive …\n"],["random_matrix","SpiralMatrix","SpiralMatrix.html#method-c-random_matrix","(size, max=DEFAULT_MAX_RANDOM)","<p>Generates random matrix on the output First parameter is size of the matrix\nSecond parameter optional …\n"],["reverse_even","SpiralMatrix","SpiralMatrix.html#method-i-reverse_even","()","<p>Shows even elements of the matrix from the center of the matrix to the\nouter side\n"]]}}